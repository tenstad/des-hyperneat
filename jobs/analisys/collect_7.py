import math
import numpy as np

with open('data.txt', 'r') as f:
    lines = [l.split() for l in f.readlines()]
    lines = dict([(tuple(l[:-2]), tuple(map(float, l[-2:]))) for l in lines])


def find_data(*params):
    try:
        return lines[tuple(params)]
    except:
        raise Exception('Could not find line ' + str(params))


iris_grids = {
    'line': "line",
    'grid': "[[[-1.0, 1.0], [-1.0, -1.0], [1.0, 1.0], [1.0, -1.0]]]",
    'rotated_grid': "[[[-0.92, -0.38], [-0.38, 0.92], [0.38, -0.92], [0.92, 0.38]]]",
    'two': "[[[-1.0, 0.0], [1.0, 0.0]], [[-1.0, 0.0], [1.0, 0.0]]]",
    'individual': "[[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]]",
}

wine_grids = {
    'line': "line",
    'single': "[[[0.0, 0.0], [-1.0, -1.0], [-0.33, -0.8], [0.33, -0.8], [1.0, -1.0], [-0.8, -0.33], [-0.8, 0.33], [0.8, -0.33], [0.8, 0.33], [-1.0, 1.0], [-0.33, 0.8], [0.33, 0.8], [1.0, 1.0]]]",
    'grids': "[[[0.0, 0.0], [-1.0, 1.0], [1.0, 1.0], [-1.0, -1.0], [1.0, -1.0]], [[-1.0, 1.0], [1.0, 1.0], [-1.0, -1.0], [1.0, -1.0]], [[-1.0, 1.0], [1.0, 1.0], [-1.0, -1.0], [1.0, -1.0]]]",
    'rotated_grids': "[[[0.0, 0.0], [-0.92, -0.38], [-0.38, 0.92], [0.38, -0.92], [0.92, 0.38]], [[-0.92, -0.38], [-0.38, 0.92], [0.38, -0.92], [0.92, 0.38]], [[-0.92, -0.38], [-0.38, 0.92], [0.38, -0.92], [0.92, 0.38]]]",
    'individual': "[[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]]",
}

retina_grids = {
    'line': 'line',
    'single': "[[[-1.0, 0.5], [-0.33, 0.5], [-1.0, -0.5], [-0.33, -0.5], [0.33, 0.5], [1.0, 0.5], [0.33, -0.5], [1.0, -0.5]]]",
    'grids': "[[[-1.0, 1.0], [1.0, 1.0], [-1.0, -1.0], [1.0, -1.0]], [[-1.0, 1.0], [1.0, 1.0], [-1.0, -1.0], [1.0, -1.0]]]",
    'lines': "[[[-0.92, -0.38], [-0.38, 0.92], [0.38, -0.92], [0.92, 0.38]], [[-0.92, -0.38], [-0.38, 0.92], [0.38, -0.92], [0.92, 0.38]]]",
    'individual': "[[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]]",
}


with open('data2.txt', 'w') as f:
    for dataset, g in zip(('iris', 'wine', 'retina'), (iris_grids, wine_grids, retina_grids)):
        for j, depth in enumerate(g.keys()):
            d = 'datasets/generated/' + dataset
            vals = [
                *find_data(depth, d, 'max_validation_fitness')]
            vals = [('%.' + str(min(int(4-math.log10(val)), 3)) + 'f') % val
                    for val in vals]
            vals = ' & '.join(vals)
            line = f'& {depth} & {vals} \\\\\n'
            f.write(line)
    f.write('\n')
